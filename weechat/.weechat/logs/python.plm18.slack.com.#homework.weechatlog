2018-04-12 16:30:38		getting channel history...
2018-01-25 23:17:12	-->		@timm has joined the channel 
2018-01-25 23:22:42	timm	@timm uploaded a file: https://plm18.slack.com/files/U8N7K9BF0/F902THFUP/Homework1__due_Jan_30_.txt (Homework1 (due Jan 30)) 
2018-01-25 23:34:42	-->		@ajshryoc has joined the channel 
2018-01-25 23:41:45	-->		@Jesse has joined the channel 
2018-01-25 23:46:10	-->		@patrick_xia has joined the channel 
2018-01-26 00:25:36	-->		@kjandre2 has joined the channel 
2018-01-26 02:15:16	-->		@schan3 has joined the channel 
2018-01-26 09:31:10	-->		@AnthonySu has joined the channel 
2018-01-26 09:59:54	-->		@hfernan has joined the channel 
2018-01-26 10:00:13	-->		@SamuelHenderson has joined the channel 
2018-01-26 10:01:38	-->		@ejgillia has joined the channel 
2018-01-26 10:07:13	-->		@jkayani has joined the channel 
2018-01-26 21:56:01	-->		@cjhall3 has joined the channel 
2018-01-27 10:24:56	cjhall3	> Note: This exercise should be done using only the statements and other features we have learned so far.
2018-01-27 10:24:56		Should we follow this instruction or can we use other features we already know? 
2018-01-27 17:12:37	-->		@adbishel has joined the channel 
2018-01-27 22:30:48	patrick_xia	Yes you can use the feature you already know @cjhall3  
2018-01-28 10:27:48	-->		@jwstanl3 has joined the channel 
2018-01-28 14:10:27	-->		@Dan.Grochmal has joined the channel 
2018-01-28 14:19:30	-->		@MattGray has joined the channel 
2018-01-28 14:36:58	-->		@asuh has joined the channel 
2018-01-28 15:10:37	-->		@ThomasDickerson has joined the channel 
2018-01-28 16:07:44	-->		@Kenny has joined the channel 
2018-01-28 19:14:03	-->		@Dax has joined the channel 
2018-01-29 14:49:06	Dax	when naming the submission file should we use firstname_lastname_h1.py? 
2018-01-29 15:43:10	patrick_xia	Yes, or you can use your unityid_h1.py 
2018-01-30 14:31:49	AlexPhelps	Perhaps this is a foolish question, but where are we supposed to submit the file? 
2018-01-30 14:32:12	Jesse	wolfware 
2018-01-30 14:33:36	AlexPhelps	Ah, of course.  Forgot this class had one haha.  Thanks Jesse. 
2018-01-30 14:34:10	Jesse	no problem 
2018-02-01 22:12:13	timm	Next homework (due  before class Tuesday):  https://github.com/txt/plm18/blob/master/src/python/sym.py
2018-02-01 22:12:13		txt/plm18
2018-02-01 22:12:13		plm18 - programming languages and modeling, NCSU 2018 
2018-02-01 23:22:12	ejgillia	"n" appears twice as well in the input string - can we modify line 102 to include that? 
2018-02-02 09:48:38	patrick_xia	Its not necessary to modify that part, just try to fill in Q1 - Q5 
2018-02-02 10:42:05	ejgillia	n appears an equal number of times as r, g, m, or space.  
2018-02-02 12:54:28	patrick_xia	Oh you're absolutely right, I'll update the file, thanks so much for pointing that out. 
2018-02-03 10:10:40	Wenting	?i? also appears twice 
2018-02-03 15:16:18	patrick_xia	updated 
2018-02-03 17:22:06	AlexPhelps	Can we use a NumPy import? 
2018-02-03 18:00:45	patrick_xia	Yes 
2018-02-03 18:02:10	AlexPhelps	Ok cool, thanks 
2018-02-03 22:27:41	SamuelHenderson	In the expected output, why is it that we want rgmin<space> instead of rgmin<space>n, since the second instance of n is after the second instance of <space>? 
2018-02-03 22:28:33	SamuelHenderson	Sorry, meant "rgmi<space>n" as what I think would be correct 
2018-02-04 01:44:24	jkayani	Related question, are we supposed to keep track of all the modes or just any 1 character w. frequency equal to the mode? In either case, the code will pass the tests as currently written 
2018-02-04 15:45:26	jamazzol	Is the homework due before class? the submission locker is listed as 4:30 AM so I wanted to confirm... thanks. 
2018-02-06 16:29:53	timm	Welcome to the final homework:
2018-02-06 16:29:53		Actual question coming. Meanwhile:
2018-02-06 16:29:53		- non-local exits: https://github.com/timm/sandbox/blob/master/except.py
2018-02-06 16:29:53		- state machine:
2018-02-06 16:29:53		https://github.com/timm/sandbox/blob/master/machines.py
2018-02-06 16:29:53		timm/sandbox
2018-02-06 16:29:53		sandbox - some throwaway stuff that you shoudl ignore  (edited)
2018-02-06 16:55:51	timm	homework 2: https://github.com/timm/sandbox/blob/master/sym-done.py
2018-02-06 16:55:51		timm/sandbox
2018-02-06 16:55:51		sandbox - some throwaway stuff that you shoudl ignore 
2018-02-06 17:25:02	adbishel	Is the double comma in line 11 of Machines.py a typo? 
2018-02-06 17:25:57	timm	please clarify. line11 has no commans 
2018-02-06 17:26:03	timm	and i cant find ,, anywhere 
2018-02-06 17:26:13	adbishel	Whoops, I was looking at this link: https://github.com/txt/plm18/blob/master/src/python/machines/machine.py
2018-02-06 17:26:13		txt/plm18
2018-02-06 17:26:13		plm18 - programming languages and modeling, NCSU 2018 
2018-02-06 17:26:27	timm	dont look there. that code .... silly [:+1:3] 
2018-02-07 10:15:30	AlexPhelps	Is machine.py due by Thursday's class?  I assumed not because we said we were starting the next class asking questions about it, but you know what they say about assuming.  It's bad. 
2018-02-07 11:29:46	timm	tuesday next week 
2018-02-07 11:30:38	timm	also, sorry for the confusion with odd file names, that homework will be based on https://github.com/timm/sandbox/blob/master/machines.py
2018-02-07 11:30:38		note that that will be the FINAL homework and everything after that will be group work.
2018-02-07 11:30:38		timm/sandbox
2018-02-07 11:30:38		sandbox - some throwaway stuff that you shoudl ignore [:+1:2] 
2018-02-07 17:12:32	riestell	I'm a little confused as to what we are a suppose to do for the homework. I remember in class you mentioned adding exceptions but I don't remember where you wanted us to add the exceptions. 
2018-02-07 17:13:00	timm	we have not released that homework yet 
2018-02-07 17:13:04	timm	please wait 
2018-02-08 15:40:19	patrick_xia	@patrick_xia uploaded a file: https://plm18.slack.com/files/U8P87UNR2/F95MZHM3K/hw3_txt.txt (hw3.txt) 
2018-02-08 15:41:02	patrick_xia	Final assignment has been posted, please check it out 
2018-02-10 22:27:06	AlexPhelps	Can we have an expected output for this assignment?  The test case starts off passing, and with all the random input I'm not really sure what we should end up with.
2018-02-10 22:27:06		*Edit*:  Understandably, there is no exact output since random.random() is used.  Could we perhaps do something more concrete, like random.seed?  (edited)
2018-02-10 23:46:42	AlexPhelps	After finishing I have some tips for those who have yet to start (or get stuck):
2018-02-10 23:46:42		1)  There are many abbreviations in this code, and a lot of them are single letters.  A great example is Line 216, where the machines state is set to the letter 's'.  I recommend going through and either A) learning what each letter is or B) renaming them so you can remember what is what.
2018-02-10 23:46:42		2)  onEntry is not inherited because it is overwritten.  Aka any changes you make to the original onEntry have to be made to all of them.
2018-02-10 23:46:42		3)  Use print statements often.  I added several along the lines of "Entering blah" and "Exiting blah".  You want to know where your program was at all times.
2018-02-10 23:46:42		4)  I would test the nested machine last.  Once everything is working, create a new machine using the method already provided.  I actually just copied the same machine and had it run twice.  Don't use machine1, it references parameters that do not exist (simple fix but just create your own using the make method, I found this much easier).
2018-02-10 23:46:42		5)  In order to test the nested machine state, you will have to create a NestedState and put it in machine2 for it to call.  Make the gaurd m.true to guarantee that the nested machine will be called.
2018-02-10 23:46:42		6)  NestedStates, although being a subclass of State, need a way to keep track of a machine.  Food for thought.
2018-02-10 23:46:42		Good luck!  Your output will be pretty random, so look more at behavior than output. [:+1:5] 
2018-02-11 10:21:33	timm	> Your output will be pretty random, so look more at behavior than output. :thumbsup: 
2018-02-12 18:37:15	cjhall3	> wrap the run method in a try-except
2018-02-12 18:37:15		Are we supposed to catch the exceptions in the run method itself or in the caller? 
2018-02-13 10:37:13	ejgillia	So I was getting differing output each time even though rseed was being called. Did a little debugging, and it turns out rseed is being called last in the program - after everything else runs, even though it is called before ok() in main. Can anyone explain? 
2018-02-13 10:37:36	ejgillia	@ejgillia uploaded a file: https://plm18.slack.com/files/U8P30D89L/F98C2E5DY/-.txt (Untitled) and commented: example output, where there is a print statement in rseed 
2018-02-13 11:32:35	Jamacle2	How do we get "payload = struct(count=0)" to compile? Am I required to use that exact line of code? (When I use the o(count=0) it compiles and functions, when I use struct it will not.) 
2018-03-11 15:42:23	patrick_xia	For project submission, please check #proj2_mar1 for the instructions 
2018-04-19 16:43:47		getting channel history...
2018-01-25 23:17:12	-->		@timm has joined the channel 
2018-01-25 23:22:42	timm	@timm uploaded a file: https://plm18.slack.com/files/U8N7K9BF0/F902THFUP/Homework1__due_Jan_30_.txt (Homework1 (due Jan 30)) 
2018-01-25 23:34:42	-->		@ajshryoc has joined the channel 
2018-01-25 23:41:45	-->		@Jesse has joined the channel 
2018-01-25 23:46:10	-->		@patrick_xia has joined the channel 
2018-01-26 00:25:36	-->		@kjandre2 has joined the channel 
2018-01-26 02:15:16	-->		@schan3 has joined the channel 
2018-01-26 09:31:10	-->		@AnthonySu has joined the channel 
2018-01-26 09:59:54	-->		@hfernan has joined the channel 
2018-01-26 10:00:13	-->		@SamuelHenderson has joined the channel 
2018-01-26 10:01:38	-->		@ejgillia has joined the channel 
2018-01-26 10:07:13	-->		@jkayani has joined the channel 
2018-01-26 21:56:01	-->		@cjhall3 has joined the channel 
2018-01-27 10:24:56	cjhall3	> Note: This exercise should be done using only the statements and other features we have learned so far.
2018-01-27 10:24:56		Should we follow this instruction or can we use other features we already know? 
2018-01-27 17:12:37	-->		@adbishel has joined the channel 
2018-01-27 22:30:48	patrick_xia	Yes you can use the feature you already know @cjhall3  
2018-01-28 10:27:48	-->		@jwstanl3 has joined the channel 
2018-01-28 14:10:27	-->		@Dan.Grochmal has joined the channel 
2018-01-28 14:19:30	-->		@MattGray has joined the channel 
2018-01-28 14:36:58	-->		@asuh has joined the channel 
2018-01-28 15:10:37	-->		@ThomasDickerson has joined the channel 
2018-01-28 16:07:44	-->		@Kenny has joined the channel 
2018-01-28 19:14:03	-->		@Dax has joined the channel 
2018-01-29 14:49:06	Dax	when naming the submission file should we use firstname_lastname_h1.py? 
2018-01-29 15:43:10	patrick_xia	Yes, or you can use your unityid_h1.py 
2018-01-30 14:31:49	AlexPhelps	Perhaps this is a foolish question, but where are we supposed to submit the file? 
2018-01-30 14:32:12	Jesse	wolfware 
2018-01-30 14:33:36	AlexPhelps	Ah, of course.  Forgot this class had one haha.  Thanks Jesse. 
2018-01-30 14:34:10	Jesse	no problem 
2018-02-01 22:12:13	timm	Next homework (due  before class Tuesday):  https://github.com/txt/plm18/blob/master/src/python/sym.py
2018-02-01 22:12:13		txt/plm18
2018-02-01 22:12:13		plm18 - programming languages and modeling, NCSU 2018 
2018-02-01 23:22:12	ejgillia	"n" appears twice as well in the input string - can we modify line 102 to include that? 
2018-02-02 09:48:38	patrick_xia	Its not necessary to modify that part, just try to fill in Q1 - Q5 
2018-02-02 10:42:05	ejgillia	n appears an equal number of times as r, g, m, or space.  
2018-02-02 12:54:28	patrick_xia	Oh you're absolutely right, I'll update the file, thanks so much for pointing that out. 
2018-02-03 10:10:40	Wenting	?i? also appears twice 
2018-02-03 15:16:18	patrick_xia	updated 
2018-02-03 17:22:06	AlexPhelps	Can we use a NumPy import? 
2018-02-03 18:00:45	patrick_xia	Yes 
2018-02-03 18:02:10	AlexPhelps	Ok cool, thanks 
2018-02-03 22:27:41	SamuelHenderson	In the expected output, why is it that we want rgmin<space> instead of rgmin<space>n, since the second instance of n is after the second instance of <space>? 
2018-02-03 22:28:33	SamuelHenderson	Sorry, meant "rgmi<space>n" as what I think would be correct 
2018-02-04 01:44:24	jkayani	Related question, are we supposed to keep track of all the modes or just any 1 character w. frequency equal to the mode? In either case, the code will pass the tests as currently written 
2018-02-04 15:45:26	jamazzol	Is the homework due before class? the submission locker is listed as 4:30 AM so I wanted to confirm... thanks. 
2018-02-06 16:29:53	timm	Welcome to the final homework:
2018-02-06 16:29:53		Actual question coming. Meanwhile:
2018-02-06 16:29:53		- non-local exits: https://github.com/timm/sandbox/blob/master/except.py
2018-02-06 16:29:53		- state machine:
2018-02-06 16:29:53		https://github.com/timm/sandbox/blob/master/machines.py
2018-02-06 16:29:53		timm/sandbox
2018-02-06 16:29:53		sandbox - some throwaway stuff that you shoudl ignore  (edited)
2018-02-06 16:55:51	timm	homework 2: https://github.com/timm/sandbox/blob/master/sym-done.py
2018-02-06 16:55:51		timm/sandbox
2018-02-06 16:55:51		sandbox - some throwaway stuff that you shoudl ignore 
2018-02-06 17:25:02	adbishel	Is the double comma in line 11 of Machines.py a typo? 
2018-02-06 17:25:57	timm	please clarify. line11 has no commans 
2018-02-06 17:26:03	timm	and i cant find ,, anywhere 
2018-02-06 17:26:13	adbishel	Whoops, I was looking at this link: https://github.com/txt/plm18/blob/master/src/python/machines/machine.py
2018-02-06 17:26:13		txt/plm18
2018-02-06 17:26:13		plm18 - programming languages and modeling, NCSU 2018 
2018-02-06 17:26:27	timm	dont look there. that code .... silly [:+1:3] 
2018-02-07 10:15:30	AlexPhelps	Is machine.py due by Thursday's class?  I assumed not because we said we were starting the next class asking questions about it, but you know what they say about assuming.  It's bad. 
2018-02-07 11:29:46	timm	tuesday next week 
2018-02-07 11:30:38	timm	also, sorry for the confusion with odd file names, that homework will be based on https://github.com/timm/sandbox/blob/master/machines.py
2018-02-07 11:30:38		note that that will be the FINAL homework and everything after that will be group work.
2018-02-07 11:30:38		timm/sandbox
2018-02-07 11:30:38		sandbox - some throwaway stuff that you shoudl ignore [:+1:2] 
2018-02-07 17:12:32	riestell	I'm a little confused as to what we are a suppose to do for the homework. I remember in class you mentioned adding exceptions but I don't remember where you wanted us to add the exceptions. 
2018-02-07 17:13:00	timm	we have not released that homework yet 
2018-02-07 17:13:04	timm	please wait 
2018-02-08 15:40:19	patrick_xia	@patrick_xia uploaded a file: https://plm18.slack.com/files/U8P87UNR2/F95MZHM3K/hw3_txt.txt (hw3.txt) 
2018-02-08 15:41:02	patrick_xia	Final assignment has been posted, please check it out 
2018-02-10 22:27:06	AlexPhelps	Can we have an expected output for this assignment?  The test case starts off passing, and with all the random input I'm not really sure what we should end up with.
2018-02-10 22:27:06		*Edit*:  Understandably, there is no exact output since random.random() is used.  Could we perhaps do something more concrete, like random.seed?  (edited)
2018-02-10 23:46:42	AlexPhelps	After finishing I have some tips for those who have yet to start (or get stuck):
2018-02-10 23:46:42		1)  There are many abbreviations in this code, and a lot of them are single letters.  A great example is Line 216, where the machines state is set to the letter 's'.  I recommend going through and either A) learning what each letter is or B) renaming them so you can remember what is what.
2018-02-10 23:46:42		2)  onEntry is not inherited because it is overwritten.  Aka any changes you make to the original onEntry have to be made to all of them.
2018-02-10 23:46:42		3)  Use print statements often.  I added several along the lines of "Entering blah" and "Exiting blah".  You want to know where your program was at all times.
2018-02-10 23:46:42		4)  I would test the nested machine last.  Once everything is working, create a new machine using the method already provided.  I actually just copied the same machine and had it run twice.  Don't use machine1, it references parameters that do not exist (simple fix but just create your own using the make method, I found this much easier).
2018-02-10 23:46:42		5)  In order to test the nested machine state, you will have to create a NestedState and put it in machine2 for it to call.  Make the gaurd m.true to guarantee that the nested machine will be called.
2018-02-10 23:46:42		6)  NestedStates, although being a subclass of State, need a way to keep track of a machine.  Food for thought.
2018-02-10 23:46:42		Good luck!  Your output will be pretty random, so look more at behavior than output. [:+1:5] 
2018-02-11 10:21:33	timm	> Your output will be pretty random, so look more at behavior than output. :thumbsup: 
2018-02-12 18:37:15	cjhall3	> wrap the run method in a try-except
2018-02-12 18:37:15		Are we supposed to catch the exceptions in the run method itself or in the caller? 
2018-02-13 10:37:13	ejgillia	So I was getting differing output each time even though rseed was being called. Did a little debugging, and it turns out rseed is being called last in the program - after everything else runs, even though it is called before ok() in main. Can anyone explain? 
2018-02-13 10:37:36	ejgillia	@ejgillia uploaded a file: https://plm18.slack.com/files/U8P30D89L/F98C2E5DY/-.txt (Untitled) and commented: example output, where there is a print statement in rseed 
2018-02-13 11:32:35	Jamacle2	How do we get "payload = struct(count=0)" to compile? Am I required to use that exact line of code? (When I use the o(count=0) it compiles and functions, when I use struct it will not.) 
2018-03-11 15:42:23	patrick_xia	For project submission, please check #proj2_mar1 for the instructions 
